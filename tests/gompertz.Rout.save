
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> library(reshape2)
> library(magrittr)
> 
> options(digits=3)
> 
> try(pompExample(gompertz,envir=3))
Error : in 'pompExample': 'envir' must be an environment or NULL
> pompExample(gompertz)
newly created object(s):
 gompertz 
> show(gompertz)
<object of class 'pomp'>
> print(gompertz@rmeasure)
native function '_gompertz_normal_rmeasure'
> print(gompertz@dmeasure)
native function '_gompertz_normal_dmeasure'
> print(gompertz@rprocess)
An object of class "discreteRprocessPlugin"
Slot "delta.t":
[1] 1

Slot "csnippet":
[1] FALSE

Slot "slotname":
[1] "step.fun"

Slot "type":
[1] 2

Slot "step.fn":
native function '_gompertz_simulator'

Slot "rate.fn":
not specified

> 
> po <- gompertz
> coef(po)
    K     r sigma   tau   X.0 
  1.0   0.1   0.1   0.1   1.0 
> coef(po,transform=TRUE)
    K     r sigma   tau   X.0 
  0.0  -2.3  -2.3  -2.3   0.0 
> coef(po,c("r","X.0"))
  r X.0 
0.1 1.0 
> coef(po,c("r","X.0"),transform=TRUE)
   r  X.0 
-2.3  0.0 
> coef(po,c("r","K")) <- c(0.2,1)
> coef(po)
    K     r sigma   tau   X.0 
  1.0   0.2   0.1   0.1   1.0 
> coef(po,transform=TRUE)
    K     r sigma   tau   X.0 
 0.00 -1.61 -2.30 -2.30  0.00 
> guess <- coef(po)
> coef(po) <- numeric(0)
> coef(po,transform=TRUE) <- partrans(po,guess,dir='to')
> coef(po) <- numeric(0)
> coef(po,c("K","r","sigma","tau","X.0"),
+      transform=TRUE) <- partrans(po,guess,dir='to')
Warning message:
in 'coef<-':  names of 'value' are being discarded 
> coef(po) <- numeric(0)
> coef(po,c("K","r","sigma","tau","X.0")) <- unname(guess)
> coef(po) <- numeric(0)
> coef(po) <- guess
> guess["r"] <- 0
> 
> set.seed(5868684L)
> simulate(gompertz,states=TRUE,obs=TRUE) %>% melt() %>% head()
  variable rep time value     L1
1        X   1    1 1.000 states
2        X   1    2 0.957 states
3        X   1    3 0.991 states
4        X   1    4 1.030 states
5        X   1    5 1.033 states
6        X   1    6 1.115 states
Warning message:
the 'states' and 'obs' arguments of 'simulate' are deprecated and will be removed in a future release. 
> pfilter(gompertz,Np=1000) -> pf
> round(logLik(pf))
[1] 32
> round(pf$loglik)
[1] 32
> trajectory(gompertz) %>% melt() %>% head()
  variable rep time value
1        X   1    1     1
2        X   1    2     1
3        X   1    3     1
4        X   1    4     1
5        X   1    5     1
6        X   1    6     1
> 
> try(
+   mf <- mif(
+     po,
+     start=guess,
+     Nmif=5,Np=1000,
+     transform=TRUE,
+     ic.lag=1,var.factor=1,
+     cooling.fraction=0.99^50,
+     rw.sd=c(r=0.02,K=0.02)
+   )
+ )
Error : in 'mif': 'mif' cannot estimate non-finite parameters.
The following transformed parameters are non-finite: 'r'
In addition: Warning message:
'mif' is deprecated and will be removed in a forthcoming release. Consider using 'mif2' instead. 
> 
> set.seed(93848585L)
> mf <- mif(
+   po,
+   Nmif=5,Np=1000,
+   transform=TRUE,
+   ic.lag=1,var.factor=1,
+   cooling.fraction=0.99^50,
+   rw.sd=c(r=0.02,K=0.02)
+ )
Warning message:
'mif' is deprecated and will be removed in a forthcoming release. Consider using 'mif2' instead. 
> coef(mf,transform=TRUE)
      K       r   sigma     tau     X.0 
 0.0421 -1.6254 -2.3026 -2.3026  0.0000 
> coef(mf)
    K     r sigma   tau   X.0 
1.043 0.197 0.100 0.100 1.000 
> conv.rec(mf)
         variable
iteration loglik nfail      K     r sigma  tau X.0
        0   30.1     0 0.0000 -1.61  -2.3 -2.3   0
        1   30.7     0 0.0127 -1.62  -2.3 -2.3   0
        2   30.9     0 0.0211 -1.62  -2.3 -2.3   0
        3   30.6     0 0.0269 -1.62  -2.3 -2.3   0
        4   31.3     0 0.0347 -1.62  -2.3 -2.3   0
        5     NA    NA 0.0421 -1.63  -2.3 -2.3   0
> conv.rec(mf,transform=TRUE)
         variable
iteration loglik nfail    K     r sigma tau X.0
        0   30.1     0 1.00 0.200   0.1 0.1   1
        1   30.7     0 1.01 0.199   0.1 0.1   1
        2   30.9     0 1.02 0.197   0.1 0.1   1
        3   30.6     0 1.03 0.197   0.1 0.1   1
        4   31.3     0 1.04 0.197   0.1 0.1   1
        5     NA    NA 1.04 0.197   0.1 0.1   1
> identical(conv.rec(mf)[,c("loglik","nfail")],
+           conv.rec(mf,transform=TRUE)[,c("loglik","nfail")])
[1] TRUE
> conv.rec(mf,c("loglik","r"))
         variable
iteration loglik     r
        0   30.1 -1.61
        1   30.7 -1.62
        2   30.9 -1.62
        3   30.6 -1.62
        4   31.3 -1.62
        5     NA -1.63
> try(conv.rec(mf,c("loglik","r"),transform=FALSE))
         variable
iteration loglik     r
        0   30.1 -1.61
        1   30.7 -1.62
        2   30.9 -1.62
        3   30.6 -1.62
        4   31.3 -1.62
        5     NA -1.63
> try(conv.rec(mf,c("loglik","r"),transform=TRUE))
         variable
iteration loglik     r
        0   30.1 0.200
        1   30.7 0.199
        2   30.9 0.197
        3   30.6 0.197
        4   31.3 0.197
        5     NA 0.197
> conv.rec(mf,c("loglik","r"),transform=TRUE)
         variable
iteration loglik     r
        0   30.1 0.200
        1   30.7 0.199
        2   30.9 0.197
        3   30.6 0.197
        4   31.3 0.197
        5     NA 0.197
> conv.rec(mf,c("loglik"),transform=TRUE)
         variable
iteration loglik
        0   30.1
        1   30.7
        2   30.9
        3   30.6
        4   31.3
        5     NA
> conv.rec(mf,c("K"),transform=TRUE)
         variable
iteration    K
        0 1.00
        1 1.01
        2 1.02
        3 1.03
        4 1.04
        5 1.04
> 
> gg <- pomp(gompertz,skeleton=map(function(x,t,params,...){
+   xx <- x["X"]*exp(params["r"]*(1-x["X"]/params["K"]))
+   c(X=unname(xx))
+ }))
> coef(gg,c("X.0","r")) <- c(1.5,3)
> trajectory(gg,as.data.frame=TRUE,times=seq(0,10))
        X time traj
1  1.5000    0    1
2  0.3347    1    1
3  2.4630    2    1
4  0.0306    3    1
5  0.5603    4    1
6  2.0956    5    1
7  0.0783    6    1
8  1.2436    7    1
9  0.5988    8    1
10 1.9953    9    1
11 0.1008   10    1
> 
> # test coercion in internals for one-d arrays
> cc <- array(data=coef(gompertz),dim=5,dimnames=list(names(coef(gompertz))))
> x0 <- init.state(gompertz,params=cc)
> x <- rprocess(gompertz,xstart=x0,times=1:2,params=cc,offset=1)
> x <- array(data=x,dim=1,dimnames=list(rownames(x)))
> y <- rmeasure(gompertz,x=x,y=0,params=cc,times=2)
> x <- array(data=x,dim=c(1,1,1,1,1),dimnames=list(rownames(x)))
> y <- rmeasure(gompertz,x=x,y=0,params=cc,times=2)
> 
> gg <- pomp(gompertz,tcovar="ctime",
+            covar=data.frame(ctime=time(gompertz),
+                             time=seq_along(time(gompertz))))
> try(simulate(gg,as.data.frame=TRUE,include.data=T))
Error : in 'simulate': error in merging actual and simulated data.
Check names of data, covariates, and states for conflicts.
'merge' error message: 'by' must specify a uniquely valid column
> try(simulate(gg,params=list(r=0.5,K=2,sigma=0.3,tau=1)))
Error : in 'simulate': in default 'initializer': there are no parameters with suffix '.0'. See '?pomp'.
> try(trajectory(gg,params=list(r=0.5,K=2,sigma=0.3,tau=1)))
Error : in default 'initializer': there are no parameters with suffix '.0'. See '?pomp'.
> 
