
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> set.seed(362083261L)
> 
> png(filename="spect-%02d.png",res=100)
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> gm1 <- spect.match(ou2,kernel.width=3,detrend="mean",nsim=50,
+                    est=c("alpha.1","alpha.4"),reltol=1e-3,maxit=100,
+                    method="Nelder-Mead")
> gm2 <- spect.match(ou2,kernel.width=3,detrend="mean",nsim=49,
+                    est=c("alpha.1","alpha.4"),reltol=1e-3,maxit=100,
+                    method="Nelder-Mead")
> gm3 <- spect.match(ou2,kernel.width=3,detrend="linear",nsim=50,
+                    est=c("alpha.1","alpha.4"),reltol=1e-3,maxit=100,
+                    method="Nelder-Mead")
> gm4 <- spect.match(ou2,kernel.width=5,detrend="quadratic",nsim=50,
+                    est=c("alpha.1","alpha.4"),reltol=1e-3,maxit=100,
+                    method="Nelder-Mead")
> gm5 <- spect.match(ou2,kernel.width=3,nsim=50,
+                    est=c("alpha.1","alpha.4"),reltol=1e-3,maxit=100,
+                    method="Nelder-Mead",start=as.list(coef(ou2)))
> plot(gm4,y=NA)
Warning message:
in 'plot-spect.pomp': 'y' is ignored 
> plot(gm4,plot.data=FALSE)
> plot(gm4,plot.data=FALSE,quantile.styles=list(col=1:5))
> plot(gm4,quantile.styles=list(lwd=c(1,2,3)))
Warning message:
in 'plot-spect.pomp': 'quantile.styles' contains an element with more than 1 entry but fewer entries than quantiles 
> try(plot(gm4,plot.data=FALSE,quantile.styles=c(lwd=c(1,2,3))))
Error : in 'plot-spect.pomp': 'quantile.styles' must be a list
> try(plot(gm4,data.styles=c(lty=c(1,2,3))))
Error : in 'plot-spect.pomp': 'data.styles' must be a list
> plot(gm4,data.styles=list(lty=c(1,2,3)))
> plot(gm4,data.styles=list(lty=1))
> 
> pompExample(ricker)
newly created object(s):
 ricker 
> set.seed(362083261L)
> 
> sp <- spect(ricker,kernel.width=3,nsim=100,seed=838775L)
> invisible(summary(sp))
> spp <- spect.match(sp,est="")
> invisible(summary(spp))
> 
> spp <- spect.match(sp,nsim=100,est=c("sigma","phi"),reltol=1e-3,maxit=100)
> invisible(summary(spp))
> 
> po <- ricker
> coef(po,"r") <- 5
> sp <- spect(po,kernel.width=1,nsim=100,seed=838775L)
> invisible(summary(sp))
> 
> po <- ricker
> theta <- as.list(coef(po))
> theta["phi"] <- 30
> sp <- spect(po,kernel.width=11,nsim=100,seed=838775L,params=theta)
> invisible(summary(sp))
> plot(simulate(sp),variables="y")
> sp <- spect(sp)
> 
> po <- ricker
> try(spect(po))
Error : in 'spect': 'kernel.width' must be specified
> try(spect(po,kernel.width=3,nsim=-5))
Error : in 'spect': 'nsim' must be specified as a positive integer
> try(spect(po,kernel.width=3,nsim=NA))
Error : in 'spect': 'nsim' must be specified as a positive integer
> po@data[3] <- NA
> try(spect(po,kernel.width=3,nsim=100))
Error : in 'spect': cannot handle NAs in the data
> po <- simulate(po,times=c(1:50,53:100))
> try(spect(po,kernel.width=3,nsim=100))
Error : in 'spect': 'spect' assumes evenly spaced times
> po <- ricker
> try(spect(pomp(po,rmeasure=function(x,t,params,...)
+   c(y=if(x["N"]<10)rpois(n=1,lambda=x)else NA)),kernel.width=7,nsim=100))
Error : in 'spect': NA in simulated data series
> 
> try(spect.match(spp,weights="A"))
Error : in 'spect.match': 'weights' must be specified as a vector or as a function
> try(spect.match(spp,weights=rep(1,5)))
Error : in 'spect.match': if 'weights' is provided as a vector, it must have length 25
> spp <- spect.match(spp,nsim=100,est="sigma",reltol=1e-3,maxit=100)
> spp <- spect.match(spp,weights=function(freq)ifelse(freq<0.2,1,0),
+                    reltol=1e-3,maxit=100,start=as.list(coef(spp)))
> try(spect.match(spp,weights=function(freq)ifelse(freq<0.2,1,NA)))
Error : in 'spect.match': 'weights' should be nonnegative and finite
> try(spect.match(spp,est=spp@est,
+                 weights=function(freq)ifelse(freq<0.2,1,"C")))
Error : in 'spect.match': problem with 'weights' function: values must be type 'double',
 but FUN(X[[11]]) result is type 'character'
> try(spect.match(po,est="bob",nsim=100,kernel.width=3))
Error : in 'spect.match': 'est' must refer to parameters named in 'start'
> summary(spect.match(po,est="",nsim=10,kernel.width=3))$msg
[1] "no optimization performed"
> summary(spect.match(po,est=NA,nsim=10,kernel.width=3))$msg
[1] "no optimization performed"
> summary(spect.match(po,est=NULL,nsim=10,kernel.width=3))$msg
[1] "no optimization performed"
> summary(spect.match(sp))$msg
[1] "no optimization performed"
> try(summary(spect.match(po,est=NULL,vars="bob",nsim=10,kernel.width=3)))
Error : in 'spect.match': 'vars' must name data variables
> try(summary(spect.match(po,est=NULL,nsim=NA,kernel.width=3)))
Error : in 'spect.match': 'nsim' must be specified as a positive integer
> try(summary(spect.match(po,est=NULL,nsim=NULL,kernel.width=3)))
Error : in 'spect.match': 'nsim' must be specified as a positive integer
> try(summary(spect.match(po,est=NULL,nsim=-3,kernel.width=3)))
Error : in 'spect.match': 'nsim' must be specified as a positive integer
> try(summary(spect.match(po,est=NULL,kernel.width=3)))
Error : in 'spect.match': 'nsim' must be supplied
> try(summary(spect.match(po,est=NULL,nsim=20)))
Error : in 'spect.match': 'kernel.width' must be specified
> 
> dat <- as.data.frame(matrix(runif(60),20,3))
> names(dat) <- letters[1:3]
> dat$time <- 1:20
> pomp(dat,times='time',t0=0,
+      rprocess=euler.sim(Csnippet("
+        x = rnorm(0,1);
+        y = rnorm(0,1);
+        z = rnorm(0,1);"),delta.t=1),
+      rmeasure=Csnippet("
+        a = rnorm(x,1);
+        b = rnorm(y,1);
+        c = rnorm(z,1);"),
+      initializer=Csnippet("x = y = z = 0;"),
+      statenames=tail(letters,3),
+      params=c(dummy=1)) -> bob
> 
> plot(spect(bob,kernel.width=3,nsim=500),
+      data.style=list(lwd=c(2,3),lty=2,col='red'))
Warning message:
in 'plot-spect.pomp': 'data.styles'contains an element with more than 1 entry but fewer entries than observed variables 
> 
> ## designed to fail
> po <- ou2
> coef(po,c("sigma.1","sigma.2","sigma.3","tau")) <- 0
> spp <- spect.match(po,kernel.width=3,nsim=100,maxit=10,reltol=0.1,
+                    est=c("alpha.1","alpha.2"))
> stopifnot(is.na(spp@value))
> 
> dev.off()
null device 
          1 
> 
