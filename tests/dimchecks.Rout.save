
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> library(reshape2)
> library(plyr)
> library(magrittr)
> 
> 
> pompExample(ricker)
newly created object(s):
 ricker 
> set.seed(1420306530L)
> po <- ricker
> 
> pars <- coef(po)
> xstart <- init.state(po,params=pars)
> rprocess(po,xstart,times=0:5,params=pars)[,1,]
        time
variable [,1]      [,2]        [,3]        [,4]      [,5]       [,6]
       N    7 0.4578051 11.78599703 0.004766933 0.2732487 14.6301023
       e    0 0.4727782 -0.09397106 0.173032749 0.2534460  0.4537029
> rprocess(po,xstart=parmat(xstart,5),times=0:5,params=pars)[,3,]
        time
variable [,1]       [,2]      [,3]       [,4]       [,5]      [,6]
       N    7  0.1788532 8.0265735 0.11906954  4.1101032 4.7809853
       e    0 -0.4671001 0.1828009 0.01576817 -0.1394347 0.4613017
> rprocess(po,xstart=xstart,times=0:5,params=parmat(pars,3))[,3,]
        time
variable [,1]      [,2]       [,3]       [,4]      [,5]      [,6]
       N    7 0.3200483  7.9793435  0.1061246 6.3880659 0.5943893
       e    0 0.1148066 -0.2638123 -0.1406537 0.4036972 0.2134135
> try(rprocess(po,xstart=parmat(xstart,2),times=0:5,params=parmat(pars,3))[,,3])
Error : in 'rprocess': the larger number of replicates is not a multiple of smaller.
> rprocess(po,xstart=parmat(xstart,2),times=0:5,params=parmat(pars,6))[,,3]
        rep
variable       [,1]       [,2]       [,3]       [,4]      [,5]        [,6]
       N 11.4232929 11.3881039  4.8636396  7.1427117 9.4874566  9.65359657
       e  0.1987878  0.2241485 -0.5425199 -0.1655866 0.2008968 -0.09235699
> x <- rprocess(po,xstart=parmat(xstart,2),times=0:5,params=parmat(pars,8))
> rmeasure(po,x=x,params=pars,times=0:5)[,,3]
[1] 106  34  99  95  77  54  52  74
> try(rmeasure(po,x=x,params=parmat(pars,3),times=0:5)[,,3])
Error : in 'rmeasure': larger number of replicates is not a multiple of smaller
> rmeasure(po,x=x,params=parmat(pars,4),times=0:5)
, , 1

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y   95   77   70   84   75   65   55   73

, , 2

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y    6    2    4    9    3    1    2    1

, , 3

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y  107   67   95   99   74   54   36   74

, , 4

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y    0    7    0    0    1    4   10    5

, , 5

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y    7  178   14    1   82  190  200   88

, , 6

        rep
variable [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
       y  216    0  190  106    1    0    0    0

> x <- rprocess(po,xstart=xstart,times=0:5,params=pars)
> rmeasure(po,x=x,params=parmat(pars,2),times=0:5)
, , 1

        rep
variable [,1] [,2]
       y   79   73

, , 2

        rep
variable [,1] [,2]
       y    1    1

, , 3

        rep
variable [,1] [,2]
       y   73   51

, , 4

        rep
variable [,1] [,2]
       y   10   12

, , 5

        rep
variable [,1] [,2]
       y  193  186

, , 6

        rep
variable [,1] [,2]
       y    0    0

> y <- rmeasure(po,x=x,params=parmat(pars,4),times=0:5)
> try(rmeasure(po,x=x,params=parmat(pars,4),times=numeric(0)))
Error : in 'rmeasure': length('times') = 0, no work to do
> try(rmeasure(po,x=x,params=parmat(pars,4),times=0:2))
Error : in 'rmeasure': length of 'times' and 3rd dimension of 'x' do not agree
> dmeasure(po,x=x,y=y[,2,,drop=F],params=pars,times=0:5)
      time
rep           [,1]     [,2]       [,3]      [,4]       [,5]      [,6]
  [1,] 0.002350788 0.268881 0.04825714 0.1309304 0.02090266 0.9998435
> x <- rprocess(po,xstart=parmat(xstart,3),times=0:5,params=pars)
> y <- rmeasure(po,x=x,params=pars,times=0:5)
> try(dmeasure(po,x=x,y=y,params=parmat(pars,3),times=0:5))
Error : in 'dmeasure': length of 'times' and 2nd dimension of 'y' do not agree
> try(dmeasure(po,x=x[,,1:3,drop=F],y=y[,2,,drop=F],params=parmat(pars,3),times=0:5))
Error : in 'dmeasure': length of 'times' and 3rd dimension of 'x' do not agree
> try(dmeasure(po,x=x,y=y[,1,,drop=F],params=parmat(pars,2),times=0:5))
Error : in 'dmeasure': larger number of replicates is not a multiple of smaller
> try(dmeasure(po,x=x[,1:2,],y=y[,1,,drop=F],params=parmat(pars,3),times=0:5))
Error : in 'dmeasure': larger number of replicates is not a multiple of smaller
> f1 <- dmeasure(po,x=x,y=y[,1,,drop=F],params=parmat(pars,3),times=0:5)
> f2 <- dmeasure(po,x=x,y=y[,1,,drop=F],params=pars,times=0:5)
> stopifnot(identical(f1,f2))
> try(dmeasure(po,x=x,y=y,params=parmat(pars,3),times=numeric(0)))
Error : in 'dmeasure': length('times') = 0, no work to do
> 
> g1 <- skeleton(po,x=x,t=0:5,params=pars)
> g2 <- skeleton(po,x=x,t=0:5,params=parmat(pars,3))
> stopifnot(identical(g1,g2))
> g3 <- skeleton(po,x=x,t=0:5,params=parmat(pars,6))
> stopifnot(identical(g1,g3[,1:3,]))
> stopifnot(identical(g1,g3[,4:6,]))
> 
> pompExample(gompertz)
newly created object(s):
 gompertz 
> p <- parmat(coef(gompertz),5)
> f1 <- partrans(gompertz,p,"to")
> f2 <- parmat(coef(gompertz,transform=TRUE),5)
> stopifnot(identical(f1,f2))
> 
> pars1 <- parmat(coef(ricker),3)
> pars1["N_0",] <- c(3,5,7)
> try(xstart <- init.state(po,params=pars1,nsim=8))
Error : in 'init.state': number of desired state-vectors 'nsim' is not a multiple of ncol('params')
> xstart <- init.state(po,params=pars1,nsim=6)
> rprocess(po,xstart,times=0:5,params=pars1)[1,4:6,6]
[1] 1.541761e-07 9.269916e-01 3.430565e+00
> 
> pars <- coef(ricker)
> pars["r"] <- 10
> xstart <- init.state(ricker,params=pars,nsim=8)
> rprocess(po,xstart,times=0:5,params=pars)[,1,]
        time
variable [,1]        [,2]       [,3]       [,4]      [,5]       [,6]
       N    7  0.06204410  0.4043021  1.3776879 3.8399622  0.5751731
       e    0 -0.02840502 -0.3662242 -0.6722834 0.1001587 -0.3611697
> simulate(ricker,params=pars1,nsim=2,times=0) %>%
+     ldply(as.data.frame)
  time  y N e
1    0 29 3 0
2    0 46 5 0
3    0 65 7 0
4    0 33 3 0
5    0 54 5 0
6    0 64 7 0
> simulate(ricker,params=pars1,nsim=1,times=0:1,as=T) %>%
+     mutate(N=signif(N,3),e=signif(e,3))
  time  y     N      e sim
1    0 25 3.000  0.000   1
2    1 75 8.280  0.215   1
3    0 50 5.000  0.000   2
4    1  7 1.230 -0.203   2
5    0 65 7.000  0.000   3
6    1  3 0.529  0.616   3
> simulate(ricker,params=pars1,nsim=1,as=T,include.data=T) %>%
+     melt(id=c("time","sim")) %>%
+     na.omit() %>%
+     ddply(~variable+sim,summarize,mean=signif(mean(value),2))
   variable  sim    mean
1         y data 41.0000
2         y    1 39.0000
3         y    2 38.0000
4         y    3 40.0000
5         N    1  3.8000
6         N    2  3.8000
7         N    3  3.8000
8         e    1  0.0091
9         e    2 -0.0330
10        e    3 -0.0210
> simulate(ricker,params=pars1,nsim=2,times=0:1,states=T) %>%
+     melt() %>% dcast(rep+time~variable) %>%
+     mutate(N=signif(N,3),e=signif(e,3))
   rep time     N       e
1    1    1 3.000  0.0000
2    1    2 5.030 -0.2840
3    2    1 5.000  0.0000
4    2    2 1.800  0.1780
5    3    1 7.000  0.0000
6    3    2 0.289  0.0133
7    4    1 3.000  0.0000
8    4    2 4.190 -0.4650
9    5    1 5.000  0.0000
10   5    2 1.450 -0.0379
11   6    1 7.000  0.0000
12   6    2 0.257 -0.1030
Warning message:
the 'states' and 'obs' arguments of 'simulate' are deprecated and will be removed in a future release. 
> simulate(ricker,params=pars1,nsim=2,times=0:1,obs=T) %>%
+     melt() %>% dcast(rep+time~variable)
   rep time   y
1    1    1  22
2    1    2  69
3    2    1  46
4    2    2  14
5    3    1  65
6    3    2   4
7    4    1  33
8    4    2 130
9    5    1  46
10   5    2  22
11   6    1  80
12   6    2   4
Warning message:
the 'states' and 'obs' arguments of 'simulate' are deprecated and will be removed in a future release. 
> simulate(ricker,params=pars1,nsim=2,times=0:1,obs=T,states=T) %>%
+     melt() %>% dcast(rep+time~variable) %>%
+     mutate(N=signif(N,3),e=signif(e,3))
   rep time     N       e   y
1    1    1 3.000  0.0000  28
2    1    2 8.980  0.2970 111
3    2    1 5.000  0.0000  40
4    2    2 1.570  0.0396  23
5    3    1 7.000  0.0000  84
6    3    2 0.208 -0.3160   1
7    4    1 3.000  0.0000  39
8    4    2 8.120  0.1960  86
9    5    1 5.000  0.0000  52
10   5    2 1.780  0.1650  19
11   6    1 7.000  0.0000  67
12   6    2 0.248 -0.1400   2
Warning message:
the 'states' and 'obs' arguments of 'simulate' are deprecated and will be removed in a future release. 
> 
> pomp(ricker,
+      initializer=Csnippet("N = rnorm(7,1); e = 0;"),statenames=c("N","e")
+      ) -> ricker
> xstart <- init.state(ricker,nsim=6)
> pars1 <- parmat(coef(ricker),3)
> pars1["r",] <- c(2,5,10)
> pars1["sigma",] <- 0.0
> x <- rprocess(ricker,params=pars1,times=c(0,1),xstart=xstart)
> stopifnot(all.equal(pars1["r",]*xstart[1,]*exp(-xstart[1,]),x["N",,2]))
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> 
> stopifnot(identical(dim(x0 <- init.state(ou2,params=coef(ou2))),c(2L,1L)))
> stopifnot(identical(dim(init.state(ou2,params=parmat(coef(ou2),5))),c(2L,5L)))
> try(rprocess(ou2,xstart=x0,times=0,params=coef(ou2),offset=0))
Error : in 'rprocess': length(times) < 2: with no transitions, there is no work to do.
> try(rprocess(ou2,xstart=x0,times=seq(0,10),params=coef(ou2),offset=-5))
Error : illegal 'offset' value -5
> stopifnot(identical(
+     dim(rprocess(ou2,xstart=x0,times=seq(0,10),params=coef(ou2),offset=10)),
+     c(2L,1L,1L)))
> try(rprocess(ou2,xstart=x0,times=seq(0,10),params=coef(ou2),offset=11))
Error : illegal 'offset' value 11
> stopifnot(identical(
+     dim(rprocess(ou2,xstart=x0,times=seq(0,10),params=coef(ou2),offset=0,ignored=3)),
+     c(2L,1L,11L)))
> stopifnot(identical(
+     dim(rprocess(ou2,xstart=parmat(x0,3),times=seq(0,10),params=coef(ou2),offset=1)),
+     c(2L,3L,10L)))
> stopifnot(identical(
+     dim(rprocess(ou2,xstart=parmat(x0,3),times=seq(0,10),params=parmat(coef(ou2),3),offset=1)),
+     c(2L,3L,10L)))
> stopifnot(identical(
+     dim(x <- rprocess(ou2,xstart=parmat(x0,3),times=seq(0,10),params=parmat(coef(ou2),6),offset=1)),
+     c(2L,6L,10L)))
> try(rprocess(ou2,xstart=parmat(x0,3),times=seq(0,10),params=parmat(coef(ou2),5),offset=1))
Error : in 'rprocess': the larger number of replicates is not a multiple of smaller.
> try(rprocess(ou2,xstart=parmat(x0,11),times=seq(0,10),params=parmat(coef(ou2),5),offset=1))
Error : in 'rprocess': the larger number of replicates is not a multiple of smaller.
> 
> try(dprocess(ou2,x=x[,3,1],times=1,params=coef(ou2),log=TRUE))
Error : in 'dprocess': length(times)<2: with no transitions, there is no work to do.
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3,1:3],times=1:3,params=coef(ou2),log=TRUE)),
+     c(1L,2L)))
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3:5,],times=1:10,params=coef(ou2),log=TRUE)),
+     c(3L,9L)))
> try(dprocess(ou2,x=x[,3:5,],times=1:8,params=coef(ou2),log=TRUE))
Error : in 'dprocess': the length of 'times' and 3rd dimension of 'x' do not agree.
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3:5,],times=1:10,params=parmat(coef(ou2),1))),
+     c(3L,9L)))
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3:5,],times=1:10,params=parmat(coef(ou2),3))),
+     c(3L,9L)))
> try(dprocess(ou2,x=x[,3:5,],times=1:10,params=parmat(coef(ou2),2)))
Error : in 'dprocess': the larger number of replicates is not a multiple of smaller.
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3:6,],times=1:10,params=parmat(coef(ou2),2))),
+     c(4L,9L)))
> try(dprocess(ou2,x=x[,3:6,],times=1:10,params=parmat(coef(ou2),3)))
Error : in 'dprocess': the larger number of replicates is not a multiple of smaller.
> try(dprocess(ou2,x=x[,1:2,],times=1:10,params=parmat(coef(ou2),5)))
Error : in 'dprocess': the larger number of replicates is not a multiple of smaller.
> stopifnot(identical(
+     dim(dprocess(ou2,x=x[,3:6,],times=1:10,params=parmat(coef(ou2),4))),
+     c(4L,9L)))
> 
> try(pomp(ou2,dprocess=function(x,times,params,log,...){0}))
Error : in 'pomp': in 'dprocess': 'dprocess' must be a function of prototype dprocess(x1, x2, t1, t2, params, ...)
> pomp(ou2,dprocess=function(x1,x2,t1,t2,params,...){0}) -> po
> try(dprocess(po,x=x[,3:6,],times=1:10,params=parmat(coef(ou2),4)))
      time
rep    [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9]
  [1,]    1    1    1    1    1    1    1    1    1
  [2,]    1    1    1    1    1    1    1    1    1
  [3,]    1    1    1    1    1    1    1    1    1
  [4,]    1    1    1    1    1    1    1    1    1
> pomp(ou2,dprocess=function(x1, x2, t1, t2, params,...){0}) -> po
> stopifnot(identical(
+     dim(dprocess(po,x=x[,3:6,],times=1:10,params=parmat(coef(ou2),4))),
+     c(4L,9L)))
> stopifnot(identical(
+     dim(dprocess(po,x=x,times=1:10,params=parmat(coef(ou2),2))),
+     c(6L,9L)))
> 
> try(simulate(ou2,nsim=0))
NULL
Warning message:
in 'simulate': nsim < 1: no work to do 
> try(class(simulate(ou2,nsim=c(1,20))))
[1] "pomp"
attr(,"package")
[1] "pomp"
Warning message:
in 'simulate': only the first number in 'nsim' is significant 
> try(simulate(ou2,nsim=numeric(0)))
Error : in 'simulate': 'nsim' must be a single integer
> 
> po <- simulate(ou2,times=1:5)
> xs <- xstart <- init.state(po)
> tt <- t <- time(po)
> xx <- x <- states(po)
> pp <- p <- coef(po)
> yy <- y <- obs(po)
> storage.mode(xs) <- "integer"
> storage.mode(xx) <- "integer"
> storage.mode(pp) <- "integer"
> storage.mode(tt) <- "integer"
> storage.mode(yy) <- "integer"
> dim(rprocess(po,xstart=xs,times=t,params=p))
[1] 2 1 5
> dim(rprocess(po,xstart=xstart,times=t,params=pp))
[1] 2 1 5
> dim(rprocess(po,xstart=xs,times=t,params=p))
[1] 2 1 5
> dim(rprocess(po,xstart=xstart,times=tt,params=p))
[1] 2 1 5
> dim(rmeasure(po,x=xx,params=p,times=t))
[1] 2 1 5
> dim(rmeasure(po,x=x,params=pp,times=t))
[1] 2 1 5
> dim(rmeasure(po,x=x,params=p,times=tt))
[1] 2 1 5
> dim(dprocess(po,x=xx,params=p,times=t))
[1] 1 4
> dim(dprocess(po,x=x,params=pp,times=t))
[1] 1 4
> dim(dprocess(po,x=x,params=p,times=tt))
[1] 1 4
> dim(dmeasure(po,y=yy,x=x,params=p,times=t))
[1] 1 5
> dim(dmeasure(po,y=y,x=xx,params=p,times=t))
[1] 1 5
> dim(dmeasure(po,y=y,x=x,params=pp,times=t))
[1] 1 5
> dim(dmeasure(po,y=y,x=x,params=p,times=tt))
[1] 1 5
> dim(init.state(po,params=p,t0=t))
[1] 2 1
> dim(init.state(po,params=pp,t0=t))
[1] 2 1
> dim(init.state(po,params=p,t0=tt))
[1] 2 1
> dim(skeleton(po,x=xx,t=t,params=p))
[1] 2 1 5
> dim(skeleton(po,x=x,t=tt,params=p))
[1] 2 1 5
> dim(skeleton(po,x=x,t=t,params=pp))
[1] 2 1 5
> dim(trajectory(po,times=tt,params=p))
[1] 2 1 5
> dim(trajectory(po,times=t,params=pp))
[1] 2 1 5
> length(dprior(po,params=p))
[1] 1
> length(dprior(po,params=pp))
[1] 1
> 
> pomp(ou2,skeleton=map(function(x,t,params,...) sample(c(c(x1=0,x2=0),c(x1=0)),size=1))) -> po
> try(trajectory(po))
Error : in 'trajectory': in map iterator: in 'trajectory': user 'skeleton' returns a vector of 1 state variables but 2 are expected
> 
