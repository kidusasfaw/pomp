
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> 
> pompExample(ou2)
newly created object(s):
 ou2 
> coef(ou2,"alpha.sd") <- 5
Warning message:
in 'coef<-': name(s) 'alpha.sd' do not refer to existing parameter(s); they are being concatenated 
> 
> set.seed(1835425749L)
> 
> po <- pomp(ou2,
+            dprior=function(params,log,...) {
+              ll <- sum(
+                        dnorm(
+                              x=params[c("alpha.1","alpha.2","alpha.3","alpha.4")],
+                              mean=c(0.8,-0.5,0.3,0.9),
+                              sd=params["alpha.sd"],
+                              log=TRUE
+                              )
+                        )
+              if (log) ll else exp(ll)
+            },
+            rprior=function(params,...) {
+              params[c("alpha.1","alpha.2","alpha.3","alpha.4")] <- rnorm(
+                                                                          n=4,
+                                                                          mean=c(0.8,-0.5,0.3,0.9),
+                                                                          sd=params["alpha.sd"]
+                                                                          )
+              params
+            }
+            )
> 
> 
> stopifnot(all.equal(mean(dprior(po,params=parmat(coef(po),3))),dnorm(x=0,mean=0,sd=5)^4))
> rprior(po,params=coef(po))
          rep
variable         [,1]
  alpha.1  -2.2417803
  alpha.2   0.7708391
  alpha.3  -3.2398829
  alpha.4   9.9993334
  sigma.1   3.0000000
  sigma.2  -0.5000000
  sigma.3   2.0000000
  tau       1.0000000
  x1.0     -3.0000000
  x2.0      4.0000000
  alpha.sd  5.0000000
> 
> coef(po,"alpha.sd") <- 1
> mean(dprior(po,params=rprior(po,params=parmat(coef(po),10000)),log=TRUE))+0.5*(1+log(2*pi))*4
[1] -0.00978941
> 
> po <- pomp(po,
+            rprior=Csnippet("
+               alpha_1 = rnorm(0.8,alpha_sd);
+               alpha_2 = rnorm(-0.5,alpha_sd);
+               alpha_3 = rnorm(0.3,alpha_sd);
+               alpha_4 = rnorm(0.9,alpha_sd);"),
+            dprior=Csnippet("
+               lik = 0;
+               lik += dnorm(alpha_1,0.8,alpha_sd,1);
+               lik += dnorm(alpha_2,-0.5,alpha_sd,1);
+               lik += dnorm(alpha_3,0.3,alpha_sd,1);
+               lik += dnorm(alpha_4,0.9,alpha_sd,1);
+               lik = (give_log) ? lik : exp(lik);"),
+            paramnames=c("alpha.1","alpha.2","alpha.3","alpha.4","alpha.sd"))
> rprior(po,params=coef(po))
          rep
variable         [,1]
  alpha.1   0.6111738
  alpha.2  -2.6067326
  alpha.3   0.6475696
  alpha.4   1.2325949
  sigma.1   3.0000000
  sigma.2  -0.5000000
  sigma.3   2.0000000
  tau       1.0000000
  x1.0     -3.0000000
  x2.0      4.0000000
  alpha.sd  1.0000000
> mean(dprior(po,params=rprior(po,params=parmat(coef(po),10000))))
[1] 0.006377317
> 
> po <- pomp(po,rprior=function(params,...)runif(length(params)))
> rprior(po,params=coef(po))
          rep
variable         [,1]
  alpha.1  0.36246742
  alpha.2  0.66257846
  alpha.3  0.66771427
  alpha.4  0.44162904
  sigma.1  0.10259724
  sigma.2  0.56184969
  sigma.3  0.52009949
  tau      0.60814897
  x1.0     0.14629950
  x2.0     0.01524557
  alpha.sd 0.88020641
> 
> po <- pomp(po,rprior=function(params,...)runif(2))
> try(rprior(po,params=coef(po)))
Error : in 'rprior': user 'rprior' returns a vector of 2 parameters but 11 are expected
> 
