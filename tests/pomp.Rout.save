
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> 
> png(filename="pomp-%02d.png",res=100)
> 
> set.seed(3488585L)
> 
> pompExample(ricker)
newly created object(s):
 ricker 
> y1 <- obs(simulate(ricker,seed=1066L))
> r2 <- pomp(ricker,measurement.model=y~pois(lambda=N*phi))
> coef(r2) <- coef(ricker)
> y2 <- obs(simulate(r2,seed=1066L))
> max(abs(y1-y2))
[1] 0
> 
> try(obs(r2,vars="bob"))
Error : in 'obs': some elements of 'vars' correspond to no observed variable
> try(time(r2) <- "nancy")
Error : in 'time<-': 'value' must be a numeric vector
> invisible(window(r2,start=3,end=9))
> invisible(window(r2))
> invisible(window(r2,start=3))
> invisible(window(r2,end=11))
> try({rr2 <- r2; timezero(rr2) <- c(4,11)})
Error : in 'timezero<-': the zero-time 't0' must be a single number
> try({rr2 <- r2; timezero(rr2) <- 4})
Error : in 'timezero<-': the zero-time 't0' must occur no later than the first observation
> rr2 <- r2
> coef(rr2,c("r","phi"),transform=TRUE) <- coef(r2,c("r","phi"),transform=TRUE)
Warning message:
in 'coef<-':  names of 'value' are being discarded 
> stopifnot(all.equal(coef(rr2),coef(r2)))
> 
> r3 <- pomp(
+   ricker,
+   dmeasure=Csnippet("lik = dpois(y,phi*N,give_log);"),
+   paramnames=c("phi"),
+   statenames=c("N")
+ )
> coef(r3) <- coef(r2)
> y3 <- obs(simulate(r3,seed=1066L))
> max(abs(y1-y3))
[1] 0
> r4 <- pomp(
+   r2,
+   rmeasure=Csnippet("y = rpois(phi*N);"),
+   paramnames=c("phi"),
+   statenames=c("N")
+ )
> coef(r4) <- coef(r2)
> y4 <- obs(simulate(r4,seed=1066L))
> max(abs(y1-y4))
[1] 0
> 
> dat <- as.data.frame(ricker)
> try(pomp(dat) -> po)
> try(pomp(dat,times="time",t0=0,covar=dat) -> po)
Error : in 'pomp': if one of 'covar', 'tcovar' is supplied, then so must the other
> try(pomp(dat,times="time",t0=0,covar=dat,tcovar=3) -> po)
Error : in 'pomp': if 'covar' is a data frame, 'tcovar' should indicate the time variable
> pomp(dat,times="time",t0=0,covar=dat,tcovar=1) -> po
> pomp(dat,times=1,t0=0,covar=dat,tcovar=1) -> po
> try(pomp(dat,times="time",t0=0,covar=dat,tcovar="bob") -> po)
Error : in 'pomp': if 'covar' is a data frame, 'tcovar' should indicate the time variable
> try(pomp(dat,times="time",t0=0,covar=dat,tcovar=1,covarnames="henry") -> po)
Error : in 'pomp': covariate(s) 'henry' are not among the columns of 'covar'
> try(pomp(dat,times="time",t0=0,fromEstimationScale=identity) -> po)
Error : in 'pomp': if one of 'toEstimationScale', 'fromEstimationScale' is supplied, then so must the other
> plot(po)
> try(pomp(dat,times="time",t0=0,skeleton=function(x,t,params,...){x}))
Error : in 'pomp': 'skeleton' must be specified as either a 'vectorfield' or a 'map'.
> try(pomp())
Error : in 'pomp': 'data' is a required argument.
> try(pomp(as.matrix(dat),times=dat$time,t0=0) -> po)
Error : in 'pomp': 'data' must be a data frame or an object of class 'pomp'
> try(pomp(dat,times="time",t0=0,skeleton=function(x,t,params,...){x}) -> po)
Error : in 'pomp': 'skeleton' must be specified as either a 'vectorfield' or a 'map'.
> try(pomp(dat,times="bob",t0=0,skeleton=map(function(x,t,params,...){x})) -> po)
Error : in 'pomp': when 'data' is a data frame, 'times' must identify a single column of 'data' either by name or by index.
> try(pomp(dat,times=11,t0=0,skeleton=map(function(x,t,params,...){x})) -> po)
Error : in 'pomp': when 'data' is a data frame, 'times' must identify a single column of 'data' either by name or by index.
> try(pomp(dat,times=1.1,t0=0,skeleton=map(function(x,t,params,...){x})) -> po)
Error : in 'pomp': when 'data' is a data frame, 'times' must identify a single column of 'data' either by name or by index.
> try(pomp(dat$y,times=dat$time,t0=0) -> po)
Error : in 'pomp': 'data' must be a data frame or an object of class 'pomp'
> pomp(dat,times=1,t0=0,skeleton=map(function(x,t,params,...){x})) -> po
> try(pomp(dat$y,times=dat$time[1:10],t0=0) -> po)
Error : in 'pomp': 'data' must be a data frame or an object of class 'pomp'
> try(pomp(ricker,skeleton=identity(identity)) -> po)
Error : in 'pomp': 'skeleton' must be specified as either a 'vectorfield' or a 'map'.
> try(pomp(ricker,toEstimationScale=identity) -> po)
Error : in 'pomp': if one of 'toEstimationScale', 'fromEstimationScale' is supplied, then so must the other
> try(pomp(ricker,fromEstimationScale=identity) -> po)
Error : in 'pomp': if one of 'toEstimationScale', 'fromEstimationScale' is supplied, then so must the other
> try(pomp("banana"))
[1] "banana"
> pomp(pomp(ricker,rprocess=NULL),dprocess=NULL) -> po
> pomp(ricker,measurement.model=y~pois(N),rmeasure=Csnippet("y=rpois(N);")) -> po
Warning message:
in 'pomp': specifying 'measurement.model' overrides specification of 'rmeasure' and 'dmeasure'. 
> 
> xdat <- ricker@data
> nm <- dimnames(xdat)
> dim(xdat) <- c(nrow(xdat),1,ncol(xdat))
> dimnames(xdat) <- list(nm[[1]],NULL,nm[[2]])
> try(pomp(xdat,times=dat$time,t0=0) -> po)
Error : in 'pomp': 'data' must be a data frame or an object of class 'pomp'
> 
> try(pompExample(bob))
Error : in 'pompExample': cannot find file 'bob.R'
> try(pompExample("bob"))
Error : in 'pompExample': cannot find file 'bob.R'
> pompExample("ricker")
newly created object(s):
 ricker 
> pomp(ricker) -> ricker
> pomp(ricker,rmeasure=Csnippet("y=rpois(N);"),statenames="N") -> po
> simulate(po) -> po
> try(pomp(po,params=c("A","B")))
Error : in 'pomp': 'params' must be a named numeric vector
> ## force recompile
> file.remove(list.files(path=file.path(tempdir(),Sys.getpid()),
+                        pattern=paste0(po@solibs[[1]]$name,".*"),
+                        full.names=TRUE))
[1] TRUE TRUE
> simulate(po) -> po
> 
> plot(po,yax.flip=TRUE)
> 
> try(pomp(as.data.frame(ricker)))
   time   y
1     0  68
2     1   2
3     2  87
4     3   0
5     4  12
6     5 174
7     6   0
8     7   0
9     8   1
10    9  57
11   10  11
12   11 178
13   12   0
14   13   1
15   14   0
16   15  34
17   16  72
18   17   3
19   18 101
20   19   0
21   20   8
22   21 156
23   22   0
24   23   0
25   24   3
26   25  93
27   26   0
28   27  17
29   28 121
30   29   0
31   30   0
32   31  19
33   32 107
34   33   0
35   34   4
36   35 127
37   36   0
38   37   1
39   38  47
40   39   8
41   40 117
42   41   0
43   42   3
44   43  82
45   44   2
46   45  39
47   46  70
48   47  11
49   48 275
50   49   0
51   50   0
> try(pomp(as.data.frame(ricker),times="time"))
Error : in 'pomp': 't0' is a required argument
> try(pomp(data.frame(t=10:1,y=1:10),t0=0))
Error : in 'pomp': 'times' is a required argument
> try(pomp(data.frame(t=10:1,y=1:10),times="t",t0=0))
Error : in 'pomp': 'times' must be an increasing numeric vector without missing values.
> try(pomp(data.frame(t=c(1:9,NA),y=1:10),times="t",t0=0))
Error : in 'pomp': 'times' must be an increasing numeric vector without missing values.
> try(pomp(data.frame(t="A",y=1:10),times="t",t0=0))
Error : in 'pomp': 'times' must be an increasing numeric vector without missing values.
> try(pomp(data.frame(t=1:10,y=1:10),times="t",t0=c(3,4)))
Error : in 'pomp': the zero-time 't0' must be a single number
> try(pomp(data.frame(t=1:10,y=1:10),times="t",t0="Q"))
Error : in 'pomp': the zero-time 't0' must be a single number
> try(pomp(data.frame(t=1:10,y=1:10),times="t",t0=0,obsnames=c("y","y")))
Error : in 'pomp': all 'obsnames' must be unique
> time(pomp(pomp(data.frame(t=1:10,y=1:10),times="t",t0=0),times=2:5) -> po)
[1] 2 3 4 5
> try(pomp(po,covar=data.frame(s=1:10,z=1:10)))
Error : in 'pomp': if one of 'covar', 'tcovar' is supplied, then so must the other
> pomp(po,covar=data.frame(s=-3:10,z=1:14,w=14:1),tcovar=1) -> po
> try(pomp(po,covarnames=c("w","w")))
Error : in 'pomp': all 'covarnames' must be unique
> try(pomp(po,covarnames=c("w","q")))
Error : in 'pomp': covariate(s) 'q' are not among the columns of 'covar'
> pomp(po,covarnames="w") -> po
> 
> try(pomp:::render("bob is {%one%} and {%two%}",
+                   one="good",
+                   two=c("bad","five"),
+                   three=c("yellow","red","green")))
Error : in 'render' incommensurate lengths of replacements
> 
> dev.off()
null device 
          1 
> 
