
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
Welcome to pomp version 1.19!
pomp version 2 is now available on https://kingaa.github.io/pomp/.
This new version contains many improvements but is not backward compatible.
To allow users time to modify their codes, 'pomp' version 2 will be provided as package 'pomp2' for a short while.

Around the middle of 2019, 'pomp2' will be renamed 'pomp' version 2.1 and will be released to CRAN. Until then, 'pomp' versions < 2 will continue to be available.

See the 'pomp version 2 upgrade guide' at https://kingaa.github.io/pomp/.
> set.seed(34996688L)
> 
> create_example <- function(times = c(1,2), t0 = 0, mu = 0.001, N_0 = 1,
+                            covar = data.frame(x = c(0, 1), time = c(0, 52))) {
+   data <- data.frame(time = times, reports = NA)
+   mmodel <- reports ~ pois(ct)
+   rate.fun <- function(j, x, t, params, covars, ...) {
+     switch(j, params["mu"]*x["N"], stop("unrecognized event ",j))
+   }
+   rprocess <- gillespie.sim(rate.fun = rate.fun, v=rbind(N=-1, ct=1))
+   initializer <- function(params, t0, ...) {
+     c(N=N_0,ct=12)
+   }
+   pomp(data = data, times = "time", t0 = t0, params = c(mu=mu),
+        rprocess = rprocess, initializer = initializer,
+        zeronames = "ct", paramnames = "mu", statenames = c("N","ct"),
+        measurement.model = mmodel, covar = covar, tcovar = "time")
+ }
> 
> names(simulate(create_example(times = 1), as.data.frame=TRUE)) -> nm1
> names(simulate(create_example(times = c(1,2)), as.data.frame=TRUE)) -> nm2
> stopifnot(nm1==nm2)
> 
